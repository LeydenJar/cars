version: "3.8"

networks:
  private:
    driver: bridge

services:
  api:
    build: .
    environment:
      APP_PORT: ${APP_PORT}
      NODE_ENV: ${NODE_ENV-development}
      TOKEN_SECRET: ${TOKEN_SECRET}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: ${MONGO_NAME}
      MONGO_PORT: ${MONGO_PORT}

    depends_on:
      - db

    restart: unless-stopped

    ports:
      - ${APP_PORT}:${APP_PORT}

    networks:
      - private

    command: /bin/sh -c "npm run build && npm run start:prod"

  db:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: ${MONGO_NAME}
      MONGO_PORT: ${MONGO_PORT}
    networks:
      - private

  # db_seed:
  #   container_name: db_seed
  #   build: db_seed_data/

  #   networks:
  #     - private
  #   depends_on:
  #     - db

  #   #The line bellow would represent a more realistic scenario, but since this project is being made for a technical test, I will just seed the data anyway so it can be tested more easily on a production scenario
  #   #command: echo "*** Running in production, not seeding data into db ***"
  #   # command: mongoimport  --username ${MONGO_USER} --password ${MONGO_PASS} --host db --db ${MONGO_NAME} --collection cars --drop --file /seedData.json --jsonArray
  #   command: /bin/sh -c "~/mongoimport.sh"
  #   # command: mongoimport --host db --port ${MONGO_PORT} --username ${MONGO_USER} --password ${MONGO_PASS} --db ${MONGO_NAME} --collection cars --drop --file /seedData.json --jsonArray
  #   # command: /bin/sh -c "mongoimport --username=${MONGO_USER} --password=${MONGO_PASS} --host=db --db=${MONGO_NAME} --collection=cars --drop --file=/seedData.json --jsonArray"
